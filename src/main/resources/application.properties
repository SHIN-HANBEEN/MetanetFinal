server.port=8083

spring.thymeleaf.cache=false
spring.thymeleaf.check-template-location=true
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

#spring.datasource.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
#spring.datasource.url=jdbc:log4jdbc:oracle:thin:@localhost:1521:xe
#spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
#spring.datasource.url=jdbc:oracle:thin:@localhost:1521:xe

#spring.datasource.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
#spring.datasource.url=jdbc:log4jdbc:oracle:thin:@localhost:1521:xe
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
spring.datasource.url=jdbc:oracle:thin:@localhost:1521:xe
spring.datasource.username=FINAL
spring.datasource.password=1004

#spring.servlet.multipart.enabled=true
#spring.servlet.multipart.max-file-size=50MB
#spring.servlet.multipart.max-request-size=50MB

#default encoder ë ìëµí  ì ìë¤.
#spring.security.user.password.encoder=bcrypt

mybatis.type-aliases-package=metanet.kosa.metanetfinal
mybatis.mapper-locations=classpath:mapper/**/*.xml
mybatis.configuration.map-underscore-to-camel-case=true

#------------------------ ë¡ê·¸ ì¤ì  ------------------------------------------- 
#OFF, FATAL, ERROR, WARN, INFO, DEBUG, TRACE
logging.level.metanet.kosa.metanetfinal=info

logging.level.root=info
#logging.level.com.example.myapp=info
#
#
#log4jdbc.spylogdelegator.name=net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator
#log4jdbc.dump.sql.maxlinelength=0

#HikariCP ë¼ë ë¼ì´ë¸ë¬ë¦¬ìì ë¡ê¹ ë ë²¨ì ì§ì íë ê²ì¸ë°ì. 
#OFF, FATAL, ERROR, WARN, INFO, DEBUG, TRACE ë ë²¨ì´ ììµëë¤. 
#logging.level.com.zaxxer.hikari=INFO
#logging.level.javax.sql.DataSource=OFF

#SQL ë° DB ê´ë ¨ ì´ë²¤í¸ ë¡ê¹ ì¤ì , ì°ê²°ì´ ëìë¤ë©´ OFFë¡ í´ëìµëë¤.
#logging.level.jdbc.audit=OFF
#ResultSet ì ë³´ì¬ì£¼ë ì¤ì ìë¯ë¡, ë§ì°¬ê°ì§ë¡ í´ê²°ì´ ëë¤ë©´ OFFë¡ í´ëìµëë¤.
#logging.level.jdbc.resultset=OFF
#logging.level.jdbc.resultsettable=INFO
#SQL ì¿¼ë¦¬ì ëí ë¡ê¹ì¤ì ì¸ë°ì. sqltimingì´ DEBUGë INFO ë©´ ì¤íìê°ê³¼ ì¿¼ë¦¬ íì¤í¸ ëª¨ë ì¶ë ¥í´ì£¼ê¸° ëë¬¸ì
#Sqlonly ì¤ì ì í´ì¤ í¼ë£¡ê° ììµëë¤.
#logging.level.jdbc.sqlonly=OFF
#logging.level.jdbc.sqltiming=INFO
#Connection ìì± ë° ë°ííë ì ë³´ë¥¼ ë³´ì¬ì£¼ë ë¡ê·¸ìëë¤.
#logging.level.jdbc.connection=OFF 
#-------------------------- /ë¡ê·¸ ì¤ì ----------------------------------------- 
#----------------------------------- 에러 설정 --------------------------------------
# 화이트 라벨 에러 페이지 활성화 여부 (기본값: true)
server.error.whitelabel.enabled=true

# 오류 응답에 stacktrace 포함 여부 (기본값: always)
server.error.include-stacktrace=never

# 오류 응답을 처리할 핸들러(ErrorController)의 경로 (기본값: /error)
server.error.path=/error
#---------------------------------------------------------------------------------
# -- Redis 설정
spring.redis.host=localhost
spring.redis.port=6379
#---------------------------------------------------------------------------------