server.port=8080

## thymeleaf settings
spring.thymeleaf.cache=false
spring.thymeleaf.check-template-location=true
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

## when you use oracle db without log4jdbc
#spring.datasource.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
#spring.datasource.url=jdbc:log4jdbc:oracle:thin:@localhost:1521:xe
#spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
#spring.datasource.url=jdbc:oracle:thin:@localhost:1521:xe

## when you use oracle db with log4jdbc
#spring.datasource.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
#spring.datasource.url=jdbc:log4jdbc:oracle:thin:@localhost:1521:xe
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
spring.datasource.url=jdbc:oracle:thin:@3.34.117.192:1521:xe
spring.datasource.username=c##final
spring.datasource.password=1004

## File upload to DB 
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=50MB

## default encoder setting
#spring.security.user.password.encoder=bcrypt

## mybatis setting
mybatis.type-aliases-package=metanet.kosa.metanetfinal
mybatis.mapper-locations=classpath:mapper/**/*.xml
mybatis.configuration.map-underscore-to-camel-case=true

## logging level
#OFF, FATAL, ERROR, WARN, INFO, DEBUG, TRACE
logging.level.metanet.kosa.metanetfinal=info

logging.level.root=info
#logging.level.com.example.myapp=info

#log4jdbc.spylogdelegator.name=net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator
#log4jdbc.dump.sql.maxlinelength=0

## when you use hikari 
#logging.level.com.zaxxer.hikari=INFO
#logging.level.javax.sql.DataSource=OFF


#logging.level.jdbc.audit=OFF
#logging.level.jdbc.resultset=OFF
#logging.level.jdbc.resultsettable=INFO
#logging.level.jdbc.sqlonly=OFF
#logging.level.jdbc.sqltiming=INFO
#logging.level.jdbc.connection=OFF 

#----------------------------------- 에러 설정 --------------------------------------
# 화이트 라벨 에러 페이지 활성화 여부 (기본값: true)
server.error.whitelabel.enabled=true

# 오류 응답에 stacktrace 포함 여부 (기본값: always)
server.error.include-stacktrace=never

# 오류 응답을 처리할 핸들러(ErrorController)의 경로 (기본값: /error)
server.error.path=/error
#---------------------------------------------------------------------------------